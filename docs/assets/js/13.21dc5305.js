(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{393:function(s,n,a){"use strict";a.r(n);var t=a(10),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"git-中的-和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-中的-和"}},[s._v("#")]),s._v(" Git 中的 ~ 和 ^")]),s._v(" "),a("blockquote",[a("p",[s._v("本文引自："),a("a",{attrs:{href:"https://scarletsky.github.io/2016/12/29/tilde-and-caret-in-git",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://scarletsky.github.io/2016/12/29/tilde-and-caret-in-git"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介")]),s._v(" "),a("p",[s._v("在使用 Git 的时候，我们经常会看见 "),a("code",[s._v("~")]),s._v(" 和 "),a("code",[s._v("^")]),s._v("，如 "),a("code",[s._v("HEAD~2")]),s._v(", "),a("code",[s._v("HEAD^3")]),s._v(" 等。 初学者经常会对这些符号感到疑惑，本文将讨论这两个符号的用途。")]),s._v(" "),a("h2",{attrs:{id:"为何需要-和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为何需要-和"}},[s._v("#")]),s._v(" 为何需要 ~ 和 ^")]),s._v(" "),a("p",[s._v("不知道大家有没体会到，我们经常需要根据一个提交去查找它的祖先提交，如查找 "),a("code",[s._v("HEAD")]),s._v(" 的第三个祖先提交。 要找到对应的提交，我们可以直接通过 "),a("code",[s._v("git log")]),s._v("，然后手动选中第三个提交。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --graph --oneline\n* a19bf31 D\n* 85ce81b C\n* 73d1f3b B\n* 078e0e6 A\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("然后我们选中 "),a("code",[s._v("078e0e6 (A)")]),s._v(" 这个提交，接着进行余下的操作。")]),s._v(" "),a("p",[s._v("这种方式虽然可以实现我们的需求，如果我们想要 "),a("code",[s._v("HEAD")]),s._v(" 的第 10 个祖先提交呢？ 那是要把 log 打印出来，然后一条一条慢慢找吗？这样的话就太低效了。")]),s._v(" "),a("p",[s._v("我们需要有一种方式，根据一个提交快速找到它的祖先提交，因此，我们就需要 "),a("code",[s._v("~")]),s._v(" 和 "),a("code",[s._v("^")]),s._v(" 这两个符号拉。")]),s._v(" "),a("h2",{attrs:{id:"的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#的作用"}},[s._v("#")]),s._v(" ~ 的作用")]),s._v(" "),a("p",[s._v("如果我们想要 "),a("code",[s._v("HEAD")]),s._v(" 的第 10 个祖先提交，我们直接用 "),a("code",[s._v("HEAD~10")]),s._v(" 就可以了。 "),a("code",[s._v("<rev>~<n>")]),s._v(" 用来表示一个提交的第 n 个祖先提交，如果不指定 n，那么默认为 1。 另外，"),a("code",[s._v("HEAD~~~")]),s._v(" 和 "),a("code",[s._v("HEAD~3")]),s._v(" 是等价的。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-parse HEAD\na19bf31 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-parse HEAD~0\na19bf31 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-parse HEAD~\n85ce81b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-parse HEAD~1\n85ce81b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-parse HEAD~~\n73d1f3b "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-parse HEAD~3\n078e0e6 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"的作用-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#的作用-2"}},[s._v("#")]),s._v(" ^ 的作用")]),s._v(" "),a("p",[s._v("先看看下面这幅图：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --graph --oneline\n\n* f44239d D\n*   7a3fb3d C\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" * 07b920c B\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("/\n* 71bd2cf A\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("我们知道，很多情况下一个提交并不是只有一个父提交。 就如上图表示那样，"),a("code",[s._v("7a3fb3d (C)")]),s._v(" 就有两个父提交：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("07b920c (B)")])]),s._v(" "),a("li",[a("code",[s._v("71bd2cf (A)")]),s._v("。")])]),s._v(" "),a("p",[s._v("这时候，我们是不能通过 "),a("code",[s._v("~")]),s._v(" 去找到 "),a("code",[s._v("07b920c (B)")]),s._v(" 这个提交的。 如果一个提交有多个父提交，那么 "),a("code",[s._v("~")]),s._v(" 只会找第一个父提交。 那么我们应该怎么找到 "),a("code",[s._v("07b920c (B)")]),s._v(" 呢？ 答案是："),a("code",[s._v("HEAD~^2")])]),s._v(" "),a("p",[a("code",[s._v("<rev>^<n>")]),s._v(" 用来表示一个提交的第 n 个父提交，如果不指定 n，那么默认为 1。 和 "),a("code",[s._v("~")]),s._v(" 不同的是，"),a("code",[s._v("HEAD^^^")]),s._v(" 并不等价于 "),a("code",[s._v("HEAD^3")]),s._v("，而是等价与 "),a("code",[s._v("HEAD^1^1^1")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-parse HEAD~\n7a3fb3d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-parse HEAD~^\n71bd2cf "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-parse HEAD~^0\n7a3fb3d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("C"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-parse HEAD~^2\n07b920c "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-parse HEAD~^3\nfatal: ambiguous argument "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'HEAD~^3'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" unknown revision or path not "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the working tree.\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rev-parse HEAD^2\nfatal: ambiguous argument "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'HEAD^2'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" unknown revision or path not "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the working tree.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"与-的关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与-的关系"}},[s._v("#")]),s._v(" ~ 与 ^ 的关系")]),s._v(" "),a("p",[s._v("我们知道，"),a("code",[s._v("~")]),s._v(" 获取第一个祖先提交，"),a("code",[s._v("^")]),s._v(" 可以获取第一个父提交。 其实第一个祖先提交就是第一个父提交，反之亦然。 因此，当 n 为 1 时，"),a("code",[s._v("~")]),s._v(" 和 "),a("code",[s._v("^")]),s._v(" 其实是等价的。 譬如："),a("code",[s._v("HEAD~~~")]),s._v(" 和 "),a("code",[s._v("HEAD^^^")]),s._v(" 是等价的。")]),s._v(" "),a("p",[s._v("最后，引用 "),a("a",{attrs:{href:"https://www.kernel.org/pub/software/scm/git/docs/git-rev-parse.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("kernel.org"),a("OutboundLink")],1),s._v(" 中非常形象的一段话：")]),s._v(" "),a("blockquote",[a("p",[s._v("Here is an illustration, by Jon Loeliger. Both commit nodes B and C are parents of commit node A. Parent commits are ordered left-to-right.")])]),s._v(" "),a("div",{staticClass:"language-reStructuredText line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("G   H   I   J\n \\ /     \\ /\n  D   E   F\n   \\  |  / \\\n    \\ | /   |\n     \\|/    |\n      B     C\n       \\   /\n        \\ /\n         A\nA =      = A^0\nB = A^   = A^1     = A~1\nC = A^2  = A^2\nD = A^^  = A^1^1   = A~2\nE = B^2  = A^^2\nF = B^3  = A^^3\nG = A^^^ = A^1^1^1 = A~3\nH = D^2  = B^^2    = A^^^2  = A~2^2\nI = F^   = B^3^    = A^^3^\nJ = F^2  = B^3^2   = A^^3^2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://stackoverflow.com/questions/2221658/whats-the-difference-between-head-and-head-in-git",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://stackoverflow.com/questions/2221658/whats-the-difference-between-head-and-head-in-git"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.kernel.org/pub/software/scm/git/docs/git-rev-parse.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.kernel.org/pub/software/scm/git/docs/git-rev-parse.html"),a("OutboundLink")],1)])]),s._v(" "),a("p",[s._v("文章作者 scarletsky")]),s._v(" "),a("p",[s._v("上次更新 2019-04-30 "),a("a",{attrs:{href:"https://scarletsky.github.io/commit/95a170dd24bf4b87af8e8309e95f31f929054a4a",target:"_blank",rel:"noopener noreferrer"}},[s._v("(95a170d)"),a("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=e.exports}}]);
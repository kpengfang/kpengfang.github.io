(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{403:function(n,e,s){"use strict";s.r(e);var v=s(10),r=Object(v.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"shebang"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shebang"}},[n._v("#")]),n._v(" Shebang")]),n._v(" "),s("h2",{attrs:{id:"usr-bin-node-和-usr-bin-env-node两者的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usr-bin-node-和-usr-bin-env-node两者的区别"}},[n._v("#")]),n._v(" "),s("code",[n._v("#!/usr/bin node")]),n._v(" 和"),s("code",[n._v("#!/usr/bin/env node")]),n._v("两者的区别")]),n._v(" "),s("p",[n._v("是Unix和Linux脚本语言的第一行，目的就是指出，你想要你的这个文件中的代码用什么可执行程序去运行它。")]),n._v(" "),s("p",[s("code",[n._v("#!/usr/bin/node")]),n._v("是告诉操作系统执行这个脚本的时候，调用"),s("code",[n._v("/usr/bin")]),n._v("下的node解释器；\n"),s("code",[n._v("#!/usr/bin/env node")]),n._v("这种用法是为了防止操作系统用户没有将node装在默认的/usr/bin路径里。当系统看到这一行的时候，首先会到env设置里查找node的安装路径，再调用对应路径下的解释器程序完成操作。\n"),s("code",[n._v("#!/usr/bin/node")]),n._v("相当于写死了node路径;\n"),s("code",[n._v("#!/usr/bin/env node")]),n._v("会去环境设置寻找node目录,推荐这种写法。")]),n._v(" "),s("h2",{attrs:{id:"shebang是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shebang是什么"}},[n._v("#")]),n._v(" Shebang是什么？")]),n._v(" "),s("p",[n._v("若是有使用过Linux或者Unix的前端开发者，对于Shebang应该不陌生，它是一个符号的名称，"),s("code",[n._v("#！")]),n._v("。这个符号通常在Unix系统的基本中第一行开头中出现，用于指明这个脚本文件的解释程序。了解了Shebang之后就可以理解，增加这一行是为了指定用node执行脚本文件。")]),n._v(" "),s("p",[n._v("当你输入一个命令的时候，npm是如何识别并执行对应的文件的呢？具体的原理阮一峰大神已经在"),s("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2016%2F10%2Fnpm_scripts.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("npm scripts 使用指南"),s("OutboundLink")],1),n._v("中介绍过。简单的理解，就是输入命令后，会有在一个新建的shell中执行指定的脚本，在执行这个脚本的时候，我们需要来指定这个脚本的解释程序是node。")]),n._v(" "),s("p",[n._v("在一些情况下，即使你增加了这一行，但还是可能会碰到一下错误，这是为什么呢？")]),n._v(" "),s("div",{staticClass:"language-sh line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[n._v("No such "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("file")]),n._v(" or directory\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br")])]),s("p",[n._v("为了解决这个问题，首先需要了解一下"),s("code",[n._v("/usr/bin/env")]),n._v("。我们已经知道，Shebang是为了指定脚本的解释程序，可是不同用户或者不同的脚本解释器有可能安装在不同的目录下，系统如何知道要去哪里找你的解释程序呢？ "),s("code",[n._v("/usr/bin/env")]),n._v("就是告诉系统可以在PATH目录中查找。 所以配置"),s("code",[n._v("#!/usr/bin/env node")]),n._v(", 就是解决了不同的用户node路径不同的问题，可以让系统动态的去查找node来执行你的脚本文件。")]),n._v(" "),s("p",[n._v("看到这里你应该理解，为什么会出现"),s("code",[n._v("No such file or directory")]),n._v("的错误？因为你的node安装路径没有添加到系统的PATH中。所以去进行node环境变量配置就可以了。")]),n._v(" "),s("p",[n._v("要是你只是想简单的测试一下，那么你可以通过"),s("code",[n._v("which node")]),n._v("命令来找到你本地的node安装路径，将"),s("code",[n._v("/usr/bin/env")]),n._v("改为你查找到的node路径即可。")]),n._v(" "),s("p",[n._v("最后需要说明的一点是，windows不支持Shebang,它是通过文件的扩展名来确定使用什么解释器来执行脚本。")])])}),[],!1,null,null,null);e.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{385:function(t,e,a){"use strict";a.r(e);var n=a(10),r=function(t){t.options.__data__block__={mermaid_1a96284d:"graph\nA(迭代协议)--\x3eB(可迭代协议)--\x3eC(&#64&#64iterator&#40&#41)\n                           C--\x3eD(可通过 obj&#91Symbol.iterator&#93 访问)\n                           C--\x3eD1(可以是普通函数)--\x3eE2(应返回迭代器对象)\n                           C--\x3eD2(可以是生成器函数)--\x3eE2\n                                                   E2-.->|必须实现 next 方法|C1\n        A--\x3eB1(迭代器协议)--\x3eC1(next&#40param?:any&#41)--\x3eD3(返回值对象)\n                                                    D3--\x3eE(属性 done:boolean)\n                                                    D3--\x3eE1(属性 value:any)\n"}},o=Object(n.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h1",{attrs:{id:"迭代协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#迭代协议"}},[this._v("#")]),this._v(" 迭代协议")]),this._v(" "),e("Mermaid",{attrs:{id:"mermaid_1a96284d",graph:this.$dataBlock.mermaid_1a96284d}})],1)}),[],!1,null,null,null);"function"==typeof r&&r(o);e.default=o.exports}}]);